# =========================================== #
#            Java-Build Dev. Team             #
# =========================================== #

#Grid options: Grids can now turn themselves on and off.  This also affects
#the loading and processing of all AI tasks and (in the future) geodata 
#within this grid.
#Turn on for a grid with a person in it is immediate, but it then turns on 
#the 8 neighboring grids based on the specified number of seconds.
#Turn off for self and neighbors occurs after the specified number of 
#seconds have passed during which a grid has had no players in or in 
#any of its neighbors.
#The always on option allows to ignore all this and let all grids be active
#at all times (not suggested)
GridsAlwaysOn = False
GridNeighborTurnOnTime = 1
GridNeighborTurnOffTime = 90

# GeoData options:
# 0 = GeoData and PathFinding OFF (default)
# 1 = GeoData used to check Line Of Sight (LOS) targetting and
#     L2Playable movement. You need to download files for data/geodata folder.
#     Monsters can pass walls but not aggro through them.
# 2 = Full GeoData enabled. Includes PathFinding (requires also /data/pathnode
#     files if CellPathFinding not enabled) and all character moves go through
#     geodata checks (if a mob passes a wall, pathfinding didn't find a route
#     but we allow attack and returning home).
#     Recommended server memory minimum 2 GB, rather 3 GB.
GeoData = 0

# GeoData driver to use
# Default: com.l2j.geodriver.GeoDriver
GeoDataDriver = com.l2j.geodriver.GeoDriver

# Cell-level pathfinding, produces more accurate routes but is (maybe 10x)
# heavier to calculate. Recommended for small servers at least. If False,
# pathnode files are used. Uses a max nr of nodes in calculation which can
# be adjusted in the algorithm if it needs to be faster.
CellPathFinding = false

# Pathnode directory folder
PathnodeDirectory = ./data/pathnode

# Pathfinding array buffers configuration
PathFindBuffers = 100x6;128x6;192x6;256x4;320x4;384x4;500x2

# Weight for nodes without obstacles far from walls
LowWeight = 0.5

# Weight for nodes near walls
MediumWeight = 2

# Weight for nodes with obstacles
HighWeight = 3

# Angle paths will be more "smart", but in cost of higher CPU utilization
AdvancedDiagonalStrategy = True

# Weight for diagonal movement. Used only with AdvancedDiagonalStrategy = True
# Default: LowWeight * sqrt(2)
DiagonalWeight = 0.707

# Maximum number of LOS postfilter passes, 0 will disable postfilter.
# Default: 3
MaxPostfilterPasses = 3

# Path debug function.
# Nodes known to pathfinder will be displayed as adena, constructed path as antidots.
# Number of the items show node cost * 10
# Potions display path after first stage filter
# Red potions - actual waypoints. Green potions - nodes removed by LOS postfilter
# This function FOR DEBUG PURPOSES ONLY, never use it on the live server!
DebugPath = true

#[True]Loads GeoData buffer's content into physical memory.
#[False] Does not necessarily imply that the GeoData buffer's content is not resident in physical memory.
ForceGeodata = False

# This is setting of Client <--> Server Player coordinates synchronization,
#  -1 - Will synchronize only Z from Client --> Server. Default when no geodata.
#   1 - Synchronization Client --> Server only. Using this option (without geodata) it is more difficult for players to bypass obstacles
#   2 - Intended for geodata (at least when cell-level pathfinding, otherwise can try -1 also)!
#       Server sends validation packet if client goes too far from server calculated coordinates.
CoordSynchronize = -1

# Falling Damage
# Allow characters to receive damage from falling.
# CoordSynchronize = 2 is recommended.
# True - enabled.
# False - disabled.
# Auto - True if geodata enabled and False if disabled.
# Default: Auto
EnableFallingDamage = True